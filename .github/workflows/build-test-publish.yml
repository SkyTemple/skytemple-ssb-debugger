# Builds on all branches & PRs
# Deploys to PyPi on "release".
name: Build, test and publish

on: [push, pull_request]

jobs:
  typechecks:
    runs-on: ubuntu-latest
    name: Type checks
    strategy:
      max-parallel: 5
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12" ]
    steps:
    - uses: actions/checkout@v4
    - uses: theCapypara/mypy-check@rust-support
      name: Run type checks
      with:
        mypy_flags: '--config-file mypy.ini'
        requirements: '-r requirements.txt'
        python_version: '${{ matrix.python-version }}'

  linting:
    runs-on: ubuntu-latest
    name: Linting
    steps:
    - uses: actions/checkout@v4
    - name: Install gobject-introspection
      run: sudo apt-get install -y gobject-introspection libgirepository1.0-dev
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt ruff
    - name: Lint with ruff
      run: ruff check --output-format=github skytemple_ssb_debugger

  code-formatting:
    runs-on: ubuntu-latest
    name: Code Format
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install ruff
        run: |
          python -m pip install --upgrade pip
          pip install ruff
      - name: Check with ruff
        run: ruff format --check skytemple_ssb_debugger

  build:
    runs-on: ubuntu-latest
    name: Build the Python wheel
    container:
      image: ghcr.io/skytemple/gtk4-build-image:1
    steps:
      # For tags we assume the version in pyproject.toml is correct!
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Rewrite version for dev if not tag
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: |
          perl -i -pe "s/version\s*=\s*\"(.*?)(\.rc.*|\.a.*|\.post.*)?\"/version=\"\1.dev0+${GITHUB_SHA::8}\"/" pyproject.toml
      - name: Note version
        run: |
          echo "PACKAGE_VERSION=$(tomlq '.project.version' pyproject.toml -r)" >> $GITHUB_ENV
      - name: Run make
        run: make
      - name: Build Python wheels
        run: |
          python3 -m pip install --upgrade build
          python3 -m build
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist/*.whl
  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    name: Deploy wheels to PyPI
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          name: wheels
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip
          pip install twine
      - name: Publish wheels to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload *.whl
