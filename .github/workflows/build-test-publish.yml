# Builds on all branches & PRs
# Deploys to PyPi on "release".
name: Build, test and publish

on: [push, pull_request]

jobs:
  typechecks:
    runs-on: ubuntu-latest
    name: Type checks
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        python-version: [ "3.10", "3.11", "3.12", "3.13.0-beta.4" ]
    steps:
    - uses: actions/checkout@v4
    - name: Install system dependencies
      run: |
        sudo apt install libgirepository1.0-dev python3-gi python3-gi-cairo gir1.2-gtk-3.0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        pip install -r requirements.txt mypy
    - name: Run type checks
      run: |
        mypy --config-file mypy.ini
        
  build:
    runs-on: ubuntu-latest
    name: Build the Python wheel
    steps:
      # For tags we assume the version in pyproject.toml is correct!
      - name: Checkout
        uses: actions/checkout@v4
      - name: Rewrite version for dev if not tag
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: |
          perl -i -pe "s/version\s*=\s*\"(.*?)(\.rc.*|\.a.*|\.post.*)?\"/version=\"\1.dev0+${GITHUB_SHA::8}\"/" pyproject.toml
      - name: Note version
        run: |
          echo "PACKAGE_VERSION=$(tomlq '.project.version' pyproject.toml -r)" >> $GITHUB_ENV
      - name: Build Python wheels
        run: |
          python3 -m pip install --upgrade build
          python3 -m build
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist/*.whl
  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    name: Deploy wheels to PyPI
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          name: wheels
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip
          pip install twine
      - name: Publish wheels to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload *.whl
